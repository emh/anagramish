{"version":3,"sources":["words.mjs","main.js"],"names":["sortByCh","str","toUpperCase","split","sort","compare","ch1","ch2","length","slice","compareWords","w1","w2","isLetter","s","loadFile","file","fetch","then","response","text","choosePair","pairs","Math","floor","random","renderLetter","letter","classes","div","document","createElement","className","join","textContent","getElementById","appendChild","render","state","startWord","words","endWord","innerHTML","forEach","w","y","l","x","indexOf","position","init","pair","map","Promise","all","pairsFile","addEventListener","e","key","toLowerCase","console","log"],"mappings":"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","file":"main.b0d5ee07.js","sourceRoot":"../src","sourcesContent":["const sortByCh = (str) => str.toUpperCase().split('').sort();\n\nconst compare = (ch1, ch2) => {\n    if (ch1.length === 0 || ch2.length === 0) return 0;\n\n    if (ch1[0] < ch2[0]) return compare(ch1.slice(1), ch2);\n    if (ch1[0] > ch2[0]) return compare(ch1, ch2.slice(1));\n\n    return 1 + compare(ch1.slice(1), ch2.slice(1));\n};\n\nexport const compareWords = (w1, w2) => compare(sortByCh(w1), sortByCh(w2));\n\nexport const isLetter = (s) => s.length === 1 && ((s >= 'a' && s <= 'z') || (s >= 'A' && s <= 'Z'));\n","'use strict';\n\nimport pairsFile from './pairs.txt';\nimport { isLetter } from './words.mjs';\n\nconst loadFile = (file) => fetch(file).then((response) => response.text()).then((text) => text.split('\\n'));\n\nfunction choosePair(pairs) {\n    return pairs[Math.floor(Math.random() * pairs.length)];\n}\n\nfunction renderLetter(letter, classes) {\n    const div = document.createElement('div');\n\n    div.className = ['letter', ...classes].join(' ');\n    div.textContent = letter;\n\n    document.getElementById('board').appendChild(div);\n}\n\nfunction render(state) {\n    const startWord = state.words[0];\n    const endWord = state.words[5];\n\n    document.getElementById('board').innerHTML = '';\n\n    state.words.forEach((w, y) => w.forEach((l, x) => {\n        const colorClass = startWord.indexOf(l) !== -1 ? 'start' : endWord.indexOf(l) !== -1 ? 'end' : '';\n        const activeClass = x === state.position.x && y === state.position.y ? 'active' : '';\n\n        renderLetter(l, [colorClass, activeClass]);\n    }));\n}\n\nfunction init(pairs) {\n    const pair = choosePair(pairs).split(',');\n\n    const words = [\n        pair[0],\n        '     ',\n        '     ',\n        '     ',\n        '     ',\n        pair[1]\n    ].map((w) => w.split(''));\n\n    return {\n        words,\n        position: { x: 0, y: 1 }\n    };\n}\n\nPromise.all([\n    loadFile(pairsFile)\n]).then(([pairs]) => {\n    const state = init(pairs);\n\n    render(state);\n\n    document.addEventListener('keydown', (e) => {\n        switch (e.key) {\n            case 'ArrowUp':\n                state.position.y = state.position.y === 1 ? 1 : state.position.y - 1;\n                break;\n            case 'ArrowDown':\n                state.position.y = state.position.y === 4 ? 4 : state.position.y + 1;\n                break;\n            case 'ArrowLeft':\n                state.position.x = state.position.x === 0 ? 0 : state.position.x - 1;\n                break;\n            case 'ArrowRight':\n                state.position.x = state.position.x === 4 ? 4 : state.position.x + 1;\n                break;\n            case 'Delete':\n                state.words[state.position.y][state.position.x] = ' ';\n\n                break;\n            case 'Backspace':\n                if (state.position.x === 0) {\n                    if (state.position.y > 1) {\n                        state.position.y = state.position.y - 1;\n                    }\n\n                    state.position.x = 4;\n                } else {\n                    state.position.x = state.position.x - 1;\n                }\n\n                state.words[state.position.y][state.position.x] = ' ';\n\n                break;\n            default:\n                if (isLetter(e.key)) {\n                    state.words[state.position.y][state.position.x] = e.key.toLowerCase();\n\n                    if (state.position.x === 4) {\n                        if (state.position.y === 4) {\n                            state.position.y = 1;\n                        } else {\n                            state.position.y = state.position.y + 1;\n                        }\n\n                        state.position.x = 0;\n                    } else {\n                        state.position.x = state.position.x + 1;\n                    }\n                } else {\n                    console.log(e.key);\n                }\n        }\n\n        render(state);\n    });\n});\n"]}