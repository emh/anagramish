{"version":3,"sources":["theme.js","virtual-keyboard.mjs","game-board.mjs","utils.mjs","game-stars.mjs","popup-message.mjs","popup-help.mjs","summary-chart.mjs","history-chart.mjs","popup-stats.mjs","words.mjs","main.js"],"names":["DEFAULT_THEME","ThemeManager","theme","localStorage","getItem","window","matchMedia","matches","setTheme","setItem","document","documentElement","setAttribute","removeItem","removeAttribute","VirtualKeyboard","HTMLElement","keys","shadowRoot","attachShadow","mode","style","createElement","textContent","append","row","rowDiv","key","keyDiv","className","disabled","control","value","addEventListener","keyPress","dispatchEvent","CustomEvent","detail","customElements","define","GameBoard","state","interactive","startWord","words","endWord","flipped","reverse","forEach","w","y","actualY","l","x","cell","classList","add","indexOf","finished","position","letterPress","backspacePress","enterPress","trashPress","letter","numStars","s","Math","max","floor","loadFile","file","fetch","then","response","text","split","d","Date","getFullYear","String","getMonth","padStart","getDate","level","parse","getHistory","JSON","putHistory","history","stringify","isEmpty","obj","Object","length","isFinished","every","GameStars","seconds","n","i","star","opacity","PopupMessage","type","template","content","cloneNode","e","handleClick","event","target","nodeName","name","innerHTML","PopupHelp","getElementById","SummaryChart","stats","div","id","HistoryChart","console","log","map","entry","repeat","date","stars","join","levelFromCount","count","PopupStats","summaryStats","historyStats","sort","k","game","pair","numSeconds","push","sortByCh","str","toUpperCase","compare","ch1","ch2","slice","compareWords","w1","w2","isLetter","goal","clicky","error","loadGame","saveGame","pairs","pieces","Number","countForLevel","pow","checkCount","minCount","maxCount","calcIndex","f","PI","valueOf","r","choosePair","filteredPairs","filter","renderBoard","container","gameBoard","setupBoardHandler","renderKeyboard","validLetters","includes","keyboard","initWords","calculateStats","streak","pk","initTodaysGame","init","dict","started","newUser","handleBackspace","handleLetterInput","emojiletters","a","b","c","g","h","j","m","o","p","q","t","u","v","z","black","yellow","emojiWord","word","emojiLevel","emojiStars","showSuccess","message","app","popup","data","title","navigator","canShare","share","querySelector","visibility","clipboard","writeText","removeChild","appendChild","handleEnter","previousWord","nextWord","firstWord","lastWord","hasNextWord","renderWord","letters","classesFor","classes","showError","timer","clearInterval","handleDeleteWord","emptyWord","handleFlip","findLastIndex","findIndex","clearPopup","setupKeyboardHandler","startsWith","toLowerCase","finshed","showHelp","showStats","showPopup","Promise","resolve","renderStars","startClock","fn","setInterval","render","fixHistoryDates","match","newKey","main","pairsFile","dictFile","themeManager","preventDefault"],"mappings":"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","file":"main.4d79b491.js","sourceRoot":"../src","sourcesContent":["// vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4\nconst DEFAULT_THEME = 'light';\n\nclass ThemeManager {\n  constructor() {\n    this.theme = localStorage.getItem('theme');\n\n    if (this.theme === null) {\n        this.theme = (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n    }\n    this.setTheme(this.theme);\n  }\n\n  setTheme(theme) {\n      this.theme = theme;\n\n      if (theme) {\n          if (theme !== DEFAULT_THEME) {\n            localStorage.setItem('theme', theme);\n          }\n          document.documentElement.setAttribute('data-theme', theme);\n      } else {\n          localStorage.removeItem('theme');\n          document.documentElement.removeAttribute('data-theme');\n      }\n  }\n\n  clearTheme() {\n      this.setTheme(null);\n  }\n}\n\nexport { ThemeManager }\n","export class VirtualKeyboard extends HTMLElement {\n    constructor(keys) {\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n\n        style.textContent = `\n            :host { \n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap: 5px;\n                cursor: pointer;\n            }\n\n            :host > div {\n                display: flex;\n                gap: 5px;\n                height: 48px;\n            }\n\n            .key {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border: solid 1px var(--key-border-color);\n                border-radius: var(--letter-border-radius);\n                background-color: var(--key-background-color);\n                color: var(--key-color);\n                height: 40px;\n                width: 40px;\n                font-size: 24px;\n                text-transform: uppercase;\n                box-sizing: border-box;\n            }\n\n            .control {\n                width: 90px;\n            }\n\n            .disabled {\n                opacity: 0.1;\n            }\n        `;\n        shadowRoot.append(style);\n\n        for (let row of keys) {\n            const rowDiv = document.createElement('div');\n\n            for (let key of row) {\n                const keyDiv = document.createElement('div');\n\n                keyDiv.className = `key${key.disabled ? ' disabled' : ''}${key.control ? ' control' : ''}`;\n                keyDiv.textContent = key.value;\n                if (!key.disabled) keyDiv.addEventListener('click', () => this.keyPress(key.value));\n                rowDiv.append(keyDiv);\n            }\n\n            shadowRoot.append(rowDiv);\n        }\n    }\n\n    keyPress(key) {\n        this.dispatchEvent(new CustomEvent('keypress', { detail: { key } }));\n    }\n}\n\ncustomElements.define('virtual-keyboard', VirtualKeyboard);\n","export class GameBoard extends HTMLElement {\n    constructor(state, interactive=true) {\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n\n        style.textContent = `\n            :host {\n                display: grid;\n                grid-template-rows: repeat(6, 1fr);\n                gap: 5px;\n                ${interactive ? 'margin-left: 110px;' : ''}\n                user-select: none;\n            }\n\n            .row {\n                display: grid;\n                grid-template-columns: repeat(${interactive ? 7 : 5}, 1fr);\n                gap: 5px;\n            }\n\n            .cell, .key {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-radius: var(--letter-border-radius);\n                height: 50px;\n                width: 50px;\n                font-size: 40px;\n                text-transform: uppercase;\n                box-sizing: border-box;\n                cursor: pointer;\n                box-shadow: var(--letter-box-shadow);\n            }\n\n            .cell {\n                background-color: var(--letter-background-color);\n                border: solid 1px var(--border-color);\n                color: var(--letter-color);\n            }\n\n            .key {\n                background-color: var(--action-background-color);\n                border: solid 1px var(--action-border-color);\n                color: var(--action-color);\n                user-select: none;\n            }\n\n            .start {\n                background-color: var(--letter-background-color-start);\n                border-color: var(--letter-border-color-start);\n                color: var(--letter-color-start);\n                box-shadow: var(--letter-box-shadow-start);\n            }\n\n            .end {\n                background-color: var(--letter-background-color-end);\n                border-color: var(--letter-border-color-end);\n                color: var(--letter-color-end);\n                box-shadow: var(--letter-box-shadow-end);\n            }\n\n            .active {\n                border: solid 2px var(--letter-border-color-active);\n                background-color: var(--letter-background-color-active);\n            }\n\n            .trash {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 50px;\n                width: 50px;\n                font-size: 30px;\n                cursor: pointer;\n                user-select: none;\n            }\n        `;\n\n        shadowRoot.append(style);\n\n        const startWord = state.words[0];\n        const endWord = state.words[5];\n        const words = state.flipped ? [...state.words].reverse() : state.words;\n\n        words.forEach((w, y) => {\n            const actualY = state.flipped ? 5 - y : y;\n            const row = document.createElement('div');\n            row.className = 'row';\n\n            w.forEach((l, x) => {\n                const cell = document.createElement('div');\n\n                cell.classList.add('cell');\n                if (startWord.indexOf(l) !== -1) cell.classList.add('start');\n                if (endWord.indexOf(l) !== -1) cell.classList.add('end');\n                if (!state.finished && x === state.position.x && actualY === state.position.y && actualY < 5) cell.classList.add('active');\n                cell.textContent = l;\n                if (l !== ' ') cell.addEventListener('click', () => this.letterPress(l))\n\n                row.append(cell);\n            });\n\n            if (!state.finished && interactive) {\n                if (y === (state.flipped ? 5 - state.position.y : state.position.y)) {\n                    if (state.position.x > 0) {\n                        const key = document.createElement('div');\n\n                        key.textContent = '⌫';\n                        key.className = 'key';\n                        key.addEventListener('click', () => this.backspacePress())\n                        row.append(key);\n                    }\n\n                    if (state.position.x === 5) {\n                        const key = document.createElement('div');\n\n                        key.textContent = '⏎';\n                        key.className = 'key';\n                        key.addEventListener('click', () => this.enterPress())\n                        row.append(key);\n                    }\n                } else if (\n                    (!state.flipped && state.position.y > 1 && y === state.position.y - 1) ||\n                    (state.flipped && state.position.y < 4 && y === 5 - state.position.y - 1)\n                ) {\n                    const key = document.createElement('div');\n\n                    key.textContent = '🗑️';\n                    key.className = 'trash';\n                    key.addEventListener('click', () => this.trashPress())\n                    row.append(key);\n                }\n            }\n\n            shadowRoot.append(row);\n        });\n    }\n\n    letterPress(letter) {\n        this.dispatchEvent(new CustomEvent('letterPress', { detail: { letter } }));\n    }\n\n    enterPress() {\n        this.dispatchEvent(new CustomEvent('enterPress'));\n    }\n\n    backspacePress() {\n        this.dispatchEvent(new CustomEvent('backspacePress'));\n    }\n\n    trashPress() {\n        this.dispatchEvent(new CustomEvent('trashPress'));\n    }\n}\n\ncustomElements.define('game-board', GameBoard);\n","export const numStars = (s) => Math.max(0, 5 - Math.floor(s / 60));\n\nexport const loadFile = (file) => fetch(file).then((response) => response.text()).then((text) => text.split('\\n'));\n\nexport const key = () => {\n    const d = new Date(); // local time\n\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n}\n\nexport const level = () => Date.parse(key()) / 86400000 % 5;\n\nexport const getHistory = () => JSON.parse(localStorage.getItem('history')) ?? {};\n\nexport const putHistory = (history) => localStorage.setItem('history', JSON.stringify(history));\n\nexport const isEmpty = (obj) => Object.keys(obj).length === 0;\n\nexport const isFinished = (words) => words.every((w) => w.every((l) => l !== ' '));\n","import { numStars } from './utils.mjs';\n\nexport class GameStars extends HTMLElement {\n    constructor(seconds) {\n        super();\n\n        const n = numStars(seconds);\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n\n        style.textContent = `\n            :host {\n                display: flex;\n                gap: 10px;\n                font-size: 40px;\n            }\n        `;\n\n        shadowRoot.append(style);\n\n        for (let i = 0; i < n; i++) {\n            const star = document.createElement('div');\n            star.textContent = '⭐';\n\n            if (i === n - 1) {\n                star.style.opacity = 1 - (seconds % 60) / 60;\n            }\n\n            shadowRoot.append(star);\n        }\n    }\n}\n\ncustomElements.define('game-stars', GameStars);\n","export class PopupMessage extends HTMLElement {\n    constructor(type) {\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        shadowRoot.append(template.content.cloneNode(true));\n        shadowRoot.addEventListener('click', (e) => this.handleClick(e));\n    }\n\n    handleClick(event) {\n        if (event.target.nodeName === 'BUTTON') {\n            this.dispatchEvent(new CustomEvent('buttonClick', { detail: { name: event.target.textContent } }));\n        }\n    }\n}\n\ncustomElements.define('popup-message', PopupMessage);\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n    <style>\n        :host {\n            position: fixed;\n            top: var(--popup-top);\n            left: 50%;\n            transform: translate(-50%, 0);\n            width: 300px;\n            font-size: 20px;\n            border: solid 1px var(--popup-border-color);\n            border-radius: var(--popup-border-radius);\n            background-color: var(--popup-background-color);\n            text-align: center;\n            box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.25);\n        }\n\n        div {\n            padding: 10px;\n            color: var(--popup-color);\n        }\n\n        .error {\n            color: red;\n        }\n\n        .success {\n            color: green;\n        }\n        </style>\n    <div class=\"popup\">\n        <slot name=\"content\"></slot>\n    </div>\n`;\n","import { GameBoard } from \"./game-board.mjs\";\nimport { GameStars } from \"./game-stars.mjs\";\n\nconst state = {\n    words: [\n        'chart'.split(''),\n        '     '.split(''),\n        '     '.split(''),\n        '     '.split(''),\n        '     '.split(''),\n        'spiel'.split('')\n    ],\n    position: { x: 0, y: 1 }\n};\n\nexport class PopupHelp extends HTMLElement {\n    constructor(type) {\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        shadowRoot.append(template.content.cloneNode(true));\n        shadowRoot.addEventListener('click', (e) => this.handleClick(e));\n\n        const game0 = shadowRoot.getElementById('game-0');\n        game0.append(new GameBoard({\n            words: [\n                'chart'.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                'spiel'.split('')\n            ],\n            position: { x: 0, y: 1 }\n        }, false));\n\n        const game1 = shadowRoot.getElementById('game-1');\n        game1.append(new GameBoard({\n            ...state,\n            words: [\n                'chart'.split(''),\n                'trash'.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                'spiel'.split('')\n            ],\n            position: { x: 0, y: 2 }\n        }, false));\n\n        const game2 = shadowRoot.getElementById('game-2');\n        game2.append(new GameBoard({\n            ...state,\n            words: [\n                'chart'.split(''),\n                'trash'.split(''),\n                'stare'.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                'spiel'.split('')\n            ],\n            position: { x: 0, y: 3 }\n        }, false));\n\n        const game3 = shadowRoot.getElementById('game-3');\n        game3.append(new GameBoard({\n            ...state,\n            words: [\n                'chart'.split(''),\n                'trash'.split(''),\n                'stare'.split(''),\n                '     '.split(''),\n                '     '.split(''),\n                'spiel'.split('')\n            ],\n            position: { x: 0, y: 4 },\n            flipped: true\n        }, false));\n\n        const game4 = shadowRoot.getElementById('game-4');\n        game4.append(new GameBoard({\n            ...state,\n            words: [\n                'chart'.split(''),\n                'trash'.split(''),\n                'stare'.split(''),\n                '     '.split(''),\n                'lapse'.split(''),\n                'spiel'.split('')\n            ],\n            position: { x: 0, y: 3 },\n            flipped: true\n        }, false));\n\n        const game5 = shadowRoot.getElementById('game-5');\n        game5.append(new GameBoard({\n            ...state,\n            words: [\n                'chart'.split(''),\n                'trash'.split(''),\n                'stare'.split(''),\n                'spear'.split(''),\n                'lapse'.split(''),\n                'spiel'.split('')\n            ],\n            finished: true,\n            position: { x: 0, y: 3 },\n            flipped: true\n        }, false));\n\n        const stars = shadowRoot.getElementById('stars');\n        stars.append(new GameStars(0));\n    }\n\n    handleClick(event) {\n        if (event.target.nodeName === 'BUTTON') {\n            this.dispatchEvent(new CustomEvent('buttonClick', { detail: { name: event.target.textContent } }));\n        }\n    }\n}\n\ncustomElements.define('popup-help', PopupHelp);\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n    <style>\n        :host {\n            position: fixed;\n            top: var(--popup-top);\n            left: 50%;\n            transform: translate(-50%, 0);\n            width: 350px;\n            font-size: 20px;\n            border: solid 1px var(--popup-border-color);\n            border-radius: var(--popup-border-radius);\n            background-color: var(--popup-background-color);\n            box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.25);\n        }\n\n        h1 {\n            text-align: center;\n            margin: 0;\n            font-size: 30px;\n        }\n\n        div {\n            padding: 10px;\n            color: var(--popup-color);\n        }\n\n        .scroll {\n            border: solid 1px var(--popup-border-color);\n            border-radius: var(--popup-border-radius);\n            height: 400px;\n            overflow-y: scroll;\n        }\n\n        .center { text-align: center; }\n\n        .footer {\n            font-size: 30px;\n            text-align: center;\n        }\n\n        button {\n            font-size: 20px;\n        }\n\n        #stars {\n            margin-left: 20px;\n        }\n\n        a {\n        color: var(--link-color);\n        }\n    </style>\n    <div>\n        <h1>ANAGRAMISH</h1>\n        <p class=\"center\">by <a target=\"_blank\" href=\"http://twitter.com/emh\">emh</a></p>\n\n        <div class=\"scroll\">\n            <h1>How to Play</h1>\n            <p>The game board has a start word and an end word.</p>\n            <div id=\"game-0\"></div>\n            <p>Your goal is to find words that use 4 letters from the word above and 1 letter from the word at the bottom. In any order - like an anagram!</p>\n            <div id=\"game-1\"></div>\n            <p>Repeat this until you've filled in all 4 words.</p>\n            <div id=\"game-2\"></div>\n            <p>If you're stuck on a word you can try working the puzzle in the other direction by clicking the Flip button.</p>\n            <div id=\"game-3\"></div>\n            <p>Now, same as before, find a word that uses 4 letters from the word above and 1 letter from the word at the bottom.</p>\n            <div id=\"game-4\"></div>\n            <p>You win the game when you fill in the last word.</p>\n            <div id=\"game-5\"></div>\n            <p>Your score is the number of stars still showing -- you lose a star for every minute you're working on the puzzle.</p>\n            <div id=\"stars\"></div>\n            <p>Ready?</p>\n        </div>\n        <div class=\"footer\">\n            <button>Game on!</button>\n        </div>\n    </div>\n`;\n","export class SummaryChart extends HTMLElement {\n    constructor(stats) {\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n\n        style.textContent = `\n            :host {\n                display: flex;\n                align-items: center;\n                flex-direction: column;\n            }\n\n            #chart > div {\n                display: flex;\n            }\n\n            #chart > div > div {\n                width: 25px;\n                height: 25px;\n                font-size: 10px;\n            }\n        `;\n\n        shadowRoot.append(style);\n\n        const div = document.createElement('div');\n        div.id = \"chart\";\n\n        div.innerHTML = `\n            <div>\n                <div>⬛</div><div>⬛</div><div>⬛</div><div>⬛</div><div>🟨</div>\n                <div>${stats[0][0]}</div><div>${stats[0][1]}</div><div>${stats[0][2]}</div><div>${stats[0][3]}</div><div>${stats[0][4]}</div><div>${stats[0][5]}</div>\n            </div>\n\n            <div>\n                <div>⬛</div><div>⬛</div><div>⬛</div><div>🟨</div><div>🟨</div>\n                <div>${stats[1][0]}</div><div>${stats[1][1]}</div><div>${stats[1][2]}</div><div>${stats[1][3]}</div><div>${stats[1][4]}</div><div>${stats[1][5]}</div>\n            </div>\n\n            <div>\n                <div>⬛</div><div>⬛</div><div>🟨</div><div>🟨</div><div>🟨</div>\n                <div>${stats[2][0]}</div><div>${stats[2][1]}</div><div>${stats[2][2]}</div><div>${stats[2][3]}</div><div>${stats[2][4]}</div><div>${stats[2][5]}</div>\n            </div>\n\n            <div>\n                <div>⬛</div><div>🟨</div><div>🟨</div><div>🟨</div><div>🟨</div>\n                <div>${stats[3][0]}</div><div>${stats[3][1]}</div><div>${stats[3][2]}</div><div>${stats[3][3]}</div><div>${stats[3][4]}</div><div>${stats[3][5]}</div>\n            </div>\n\n            <div>\n                <div>🟨</div><div>🟨</div><div>🟨</div><div>🟨</div><div>🟨</div>\n                <div>${stats[4][0]}</div><div>${stats[4][1]}</div><div>${stats[4][2]}</div><div>${stats[4][3]}</div><div>${stats[4][4]}</div><div>${stats[4][5]}</div>\n            </div>\n\n            <div>\n                <div></div><div></div><div></div><div></div><div></div>\n                <div></div><div>⭐</div><div>⭐</div><div>⭐</div><div>⭐</div><div>⭐</div>\n            </div>\n\n            <div>\n                <div></div><div></div><div></div><div></div><div></div>\n                <div></div><div></div><div>⭐</div><div>⭐</div><div>⭐</div><div>⭐</div>\n            </div>\n\n            <div>\n                <div></div><div></div><div></div><div></div><div></div>\n                <div></div><div></div><div></div><div>⭐</div><div>⭐</div><div>⭐</div>\n            </div>\n\n            <div>\n                <div></div><div></div><div></div><div></div><div></div>\n                <div></div><div></div><div></div><div></div><div>⭐</div><div>⭐</div>\n            </div>\n\n            <div>\n                <div></div><div></div><div></div><div></div><div></div>\n                <div></div><div></div><div></div><div></div><div></div><div>⭐</div>\n            </div>\n        `;\n\n        shadowRoot.append(div);\n    }\n}\n\ncustomElements.define('summary-chart', SummaryChart);\n\n","export class HistoryChart extends HTMLElement {\n    constructor(stats) {\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        const style = document.createElement('style');\n\n        style.textContent = `\n            :host {\n                text-align: left;\n                font-size: 12px;\n            }\n        `;\n\n        shadowRoot.append(style);\n\n        const div = document.createElement('div');\n        div.id = \"chart\";\n\n        console.log(stats);\n\n        div.innerHTML = stats.map((entry) => {\n            return `<div>\n                ${'⬛'.repeat(4 - entry.level)}${'🟨'.repeat(entry.level + 1)}\n                ${entry.date}\n                ${'⭐'.repeat(entry.stars)}\n            </div>`;\n        }).join('');\n\n        shadowRoot.append(div);\n    }\n}\n\ncustomElements.define('history-chart', HistoryChart);\n\n","import { SummaryChart } from \"./summary-chart.mjs\";\nimport { HistoryChart } from \"./history-chart.mjs\";\nimport { key, numStars } from \"./utils.mjs\";\n\nconst levelFromCount = (count) => {\n    if (count < 10) return 4;\n    if (count < 40) return 3;\n    if (count < 160) return 2;\n    if (count < 640) return 1;\n\n    return 0;\n}\n\nexport class PopupStats extends HTMLElement {\n    constructor(history) {\n        console.log(history);\n        super();\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        shadowRoot.append(template.content.cloneNode(true));\n        shadowRoot.addEventListener('click', (e) => this.handleClick(e));\n\n        const summaryStats = [\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0]\n        ];\n\n        const historyStats = [];\n        const keys = Object.keys(history);\n\n        keys.sort().forEach((k) => {\n            const game = history[k];\n            const level = levelFromCount(game.pair[2]);\n\n            if (k === key()) return;\n\n            const stars = game.finished ? numStars(game.numSeconds) : 0;\n\n            historyStats.push({ date: k, level, stars });\n            summaryStats[level][stars]++;\n        });\n\n        console.log(summaryStats, historyStats);\n\n        const summaryDiv = shadowRoot.getElementById('summary');\n        summaryDiv.append(new SummaryChart(summaryStats));\n\n        const historyDiv = shadowRoot.getElementById('history');\n        historyDiv.append(new HistoryChart(historyStats));\n    }\n\n    handleClick(event) {\n        if (event.target.nodeName === 'BUTTON') {\n            this.dispatchEvent(new CustomEvent('buttonClick', { detail: { name: event.target.textContent } }));\n        }\n    }\n}\n\ncustomElements.define('popup-stats', PopupStats);\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n    <style>\n        :host {\n            position: fixed;\n            top: var(--popup-top);\n            left: 50%;\n            transform: translate(-50%, 0);\n            width: 400px;\n            font-size: 20px;\n            border: solid 1px var(--popup-border-color);\n            border-radius: var(--popup-border-radius);\n            background-color: var(--popup-background-color);\n            box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.25);\n        }\n\n        h1 {\n            text-align: center;\n            margin: 0;\n            font-size: 30px;\n        }\n\n        div {\n            padding: 10px;\n            color: var(--popup-color);\n        }\n\n        .scroll {\n            border: solid 1px var(--popup-border-color);\n            border-radius: var(--popup-border-radius);\n            height: 400px;\n            overflow-y: scroll;\n            text-align: center;\n        }\n\n        .footer {\n            font-size: 30px;\n            text-align: center;\n        }\n\n        button {\n            font-size: 20px;\n        }\n\n        #history {\n            padding-left: 40px;\n        }\n    </style>\n    <div>\n        <h1>ANAGRAMISH: Stats</h1>\n\n        <div class=\"scroll\">\n            <h1>Summary</h1>\n            <div id=\"summary\"></div>\n            <h1>History</h1>\n            <div id=\"history\"></div>\n        </div>\n        <div class=\"footer\">\n            <button>Game on!</button>\n        </div>\n    </div>\n`;\n","const sortByCh = (str) => str.toUpperCase().split('').sort();\n\nconst compare = (ch1, ch2) => {\n    if (ch1.length === 0 || ch2.length === 0) return 0;\n\n    if (ch1[0] < ch2[0]) return compare(ch1.slice(1), ch2);\n    if (ch1[0] > ch2[0]) return compare(ch1, ch2.slice(1));\n\n    return 1 + compare(ch1.slice(1), ch2.slice(1));\n};\n\nexport const compareWords = (w1, w2) => compare(sortByCh(w1), sortByCh(w2));\n\nexport const isLetter = (s) => s.length === 1 && ((s >= 'a' && s <= 'z') || (s >= 'A' && s <= 'Z'));\n","'use strict';\n\nimport { ThemeManager } from './theme.js';\n\nimport { VirtualKeyboard } from './virtual-keyboard.mjs';\nimport { GameBoard } from './game-board.mjs';\nimport { GameStars } from './game-stars.mjs';\nimport { PopupMessage } from './popup-message.mjs';\nimport { PopupHelp } from './popup-help.mjs';\nimport { PopupStats } from './popup-stats.mjs';\n\nimport { compareWords, isLetter } from './words.mjs';\nimport { numStars, loadFile, key, getHistory, putHistory, isEmpty, isFinished, level } from './utils.mjs';\n\nimport pairsFile from './pairs.txt';\nimport dictFile from './dictionary.txt';\n\nfunction goal(name) {\n    try {\n        clicky.goal(name);\n    } catch (e) {\n        console.error('Error logging goal', name, e);\n    }\n}\n\nfunction loadGame() {\n    const history = getHistory();\n\n    return history[key()];\n}\n\nfunction saveGame(game) {\n    const history = getHistory();\n\n    history[key()] = game;\n\n    putHistory(history);\n}\n\nfunction parse(pairs) {\n    return pairs.map((pair) => {\n        const pieces = pair.split(',');\n\n        return [pieces[0], pieces[1], Number(pieces[2])];\n    });\n}\n\nconst countForLevel = (level) => level === 0 ? 10000 : Math.pow(2, 10 - ((1 + level) * 2)) * 10;\n\nconst checkCount = (pair, minCount, maxCount) => {\n    const count = pair[2];\n\n    return count >= minCount && count < maxCount;\n}\n\nconst calcIndex = (n) => {\n    var d = Date.parse(key());\n\n    const f = Math.PI - 3; // need a number > 0 and < 1\n    const s = d.valueOf() / 1000;\n    const r = (s * f) - Math.floor(s * f);\n    const i = Math.floor(n * r);\n\n    return i;\n}\n\nfunction choosePair(pairs, level) {\n    const maxCount = countForLevel(level);\n    const minCount = level === 4 ? 1 : countForLevel(level + 1);\n\n    const filteredPairs = pairs.filter((pair) => checkCount(pair, minCount, maxCount));\n    const n = filteredPairs.length;\n    const i = calcIndex(n);\n\n    return filteredPairs[i];\n}\n\nfunction renderBoard(state) {\n    const container = document.getElementById('board');\n    const gameBoard = new GameBoard(state);\n\n    container.innerHTML = '';\n    container.append(gameBoard);\n\n    setupBoardHandler(state);\n}\n\nfunction renderKeyboard(state) {\n    const container = document.getElementById('keyboard');\n    const validLetters = [...state.words[0], ...state.words[5]];\n\n    const control = (value) => ({ value, control: true });\n    const letter = (value) => ({ value, disabled: !validLetters.includes(value) });\n    const keys = [\n        [control('Flip ⇵')],\n        [],\n        ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'].map(letter),\n        ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'].map(letter),\n        [control('⏎'), ...['z', 'x', 'c', 'v', 'b', 'n', 'm'].map(letter), control('⌫')]\n    ];\n\n    const keyboard = new VirtualKeyboard(keys);\n\n    container.innerHTML = '';\n    container.append(keyboard);\n}\n\nfunction initWords(pair) {\n    const words = [\n        pair[0],\n        '     ',\n        '     ',\n        '     ',\n        '     ',\n        pair[1]\n    ].map((w) => w.split(''));\n\n    return words;\n}\n\nfunction calculateStats(history) {\n    let streak = 0;\n    const keys = Object.keys(history);\n    let pk = null;\n\n    keys.sort().forEach((k) => {\n        const game = history[k];\n\n        console.log(game, k !== key(), pk && new Date(k) - new Date(pk) > 86400000);\n\n        if ((!game.finished && k !== key()) || (pk && new Date(k) - new Date(pk) > 86400000)) {\n            console.log('reset streak a');\n            streak = 0;\n        }\n\n        if (game.finished) {\n            console.log('increment streak');\n            streak++;\n        }\n\n        pk = k;\n    });\n\n    console.log(pk, key());\n\n    if (pk && new Date(key()) - new Date(pk) > 86400000) {\n        console.log('reset streak b');\n        streak = 0;\n    }\n\n    return { level: level(), streak };\n}\n\nfunction initTodaysGame(pairs, level) {\n    const pair = choosePair(pairs, level);\n\n    return {\n        pair,\n        numSeconds: 0\n    };\n}\n\nfunction init(pairs, dict) {\n    const history = getHistory();\n    const { level, streak } = calculateStats(history);\n    let game = loadGame();\n\n    if (!game) {\n        game = initTodaysGame(pairs, level);\n        saveGame(game);\n    }\n\n    return {\n        started: false,\n        dict,\n        level,\n        streak,\n        finished: game.finished,\n        words: game.finished ? game.words : initWords(game.pair),\n        position: { x: 0, y: 1 },\n        newUser: isEmpty(history)\n    };\n}\n\nfunction handleBackspace(state) {\n    if (state.position.x > 0) {\n        state.position.x -= 1;\n        state.words[state.position.y][state.position.x] = ' ';\n    }\n}\n\nfunction handleLetterInput(state, letter) {\n    if (state.position.x < 5 && state.position.y > 0 && state.position.y < 5) {\n        state.words[state.position.y][state.position.x] = letter;\n\n        state.position.x = state.position.x + 1;\n    }\n}\n\nconst emojiletters = {\n    a: '🇦',\n    b: '🇧',\n    c: '🇨',\n    d: '🇩',\n    e: '🇪',\n    f: '🇫',\n    g: '🇬',\n    h: '🇭',\n    i: '🇮',\n    j: '🇯',\n    k: '🇰',\n    l: '🇱',\n    m: '🇲',\n    n: '🇳',\n    o: '🇴',\n    p: '🇵',\n    q: '🇶',\n    r: '🇷',\n    s: '🇸',\n    t: '🇹',\n    u: '🇺',\n    v: '🇻',\n    w: '🇼',\n    x: '🇽',\n    y: '🇾',\n    z: '🇿',\n    black: '⬛',\n    yellow: '🟨',\n    star: '⭐'\n};\n\nfunction emojiWord(word) {\n    return word.map((letter) => emojiletters[letter]).join(' ');\n}\n\nfunction emojiLevel(level) {\n    const word = [];\n\n    for (let i = 0; i < 5; i++) {\n        word.push(i <= level ? emojiletters.yellow : emojiletters.black);\n    }\n\n    return word.join(' ');\n}\n\nfunction emojiStars(n) {\n    const word = [];\n\n    for (let i = 0; i < n; i++) {\n        word.push(emojiletters.star);\n    }\n\n    return word.join(' ');\n}\n\nfunction showSuccess(state) {\n    const game = loadGame();\n    const n = numStars(game.numSeconds);\n\n    const message = `\n        <p>You solved it!</p>\n        <p>You earned ${n} star${n !== 1 ? 's' : ''}<br/>\n        ${state.streak === 1 ? 'and you started a new streak' : `and your streak is ${state.streak}`}.</p>\n        <div>\n        ${emojiWord(state.words[0])}<br/>\n        ${emojiLevel(state.level)}<br/>\n        ${emojiStars(n)}<br/>\n        ${emojiWord(state.words[5])}\n        </div>\n        <p>Have you played <br/><a href=\"https://emh.io/shootingblanks\">Shooting Blanks</a>?</p>\n        <p id=\"copied\">Copied to clipboard.</p>\n        <div class=\"buttons\">\n        <button>Share</button>\n        <button>Copy</button>\n        <button>OK</button>\n        </div>\n    `;\n\n    const app = document.getElementById('app');\n    const popup = new PopupMessage('success');\n    const div = document.createElement('div');\n\n    div.setAttribute('id', 'popup');\n    div.setAttribute('slot', 'content');\n    div.innerHTML = message;\n    popup.addEventListener('buttonClick', (e) => {\n        const { name } = e.detail;\n\n        if (name === 'Share' || name === 'Copy') {\n            goal('Shared');\n\n            const share = [\n                'Anagramish by @emh',\n                emojiWord(state.words[0]),\n                emojiLevel(state.level),\n                emojiStars(n),\n                emojiWord(state.words[5]),\n                `Streak: ${state.streak}`,\n                '',\n                'https://anagramish.com'\n            ];\n\n            const data = {\n                title: 'Anagramish',\n                text: share.join('\\n')\n            };\n\n            if (name === 'Share' && navigator.canShare && navigator.canShare(data)) {\n                navigator.share(data);\n            } else {\n                const div = document.querySelector('#copied');\n                div.style.visibility = \"visible\";\n\n                navigator.clipboard.writeText(data.text);\n            }\n        } else if (name === '*') {\n            navigator.clipboard.writeText(localStorage.getItem('history'));\n        } else {\n            app.removeChild(popup);\n        }\n    });\n    popup.append(div);\n    app.appendChild(popup);\n}\n\nfunction handleEnter(state) {\n    if (state.position.x === 5 && state.position.y < 5) {\n        const y = state.position.y;\n        const word = state.words[y].join('');\n        const previousWord = state.words[state.flipped ? y + 1 : y - 1].join('');\n        const nextWord = state.words[state.flipped ? y - 1 : y + 1].join('');\n        const firstWord = state.words[state.flipped ? 5 : 0].join('');\n        const lastWord = state.words[state.flipped ? 0 : 5].join('');\n\n        const hasNextWord = nextWord !== '     ';\n\n        const classesFor = (l) => {\n            const classes = ['letter'];\n\n            if (state.words[0].indexOf(l) !== -1) classes.push('start');\n            if (state.words[5].indexOf(l) !== -1) classes.push('end');\n\n            return classes.join(' ');\n        };\n\n        const renderWord = (word) => {\n            const letters = word.split('');\n\n            return `<div class=\"word\">${letters.map((l) => `<span class=\"${classesFor(l)}\">${l}</span>`).join('')}</div>`;\n        };\n\n        if (!state.dict.includes(word)) {\n            showError('Not a word.', y);\n        } else if (compareWords(word, previousWord) !== 4) {\n            showError(`${renderWord(word)}<p>can only be one letter different from</p>${renderWord(previousWord)}`);\n        } else if (hasNextWord && compareWords(word, nextWord) !== 4) {\n            showError(`${renderWord(word)}<p>can only be one letter different from</p>${renderWord(nextWord)}`);\n        } else if (compareWords(word, firstWord) !== (state.flipped ? y : 5 - y) || compareWords(word, lastWord) !== (state.flipped ? 5 - y : y)) {\n            showError(`<p>You have to use ${5 - y} letter${y === 4 ? '' : 's'} from</p>${renderWord(state.words[0].join(''))}<p>and ${y} letter${y === 1 ? '' : 's'} from</p>${renderWord(state.words[5].join(''))}`);\n        } else {\n            goal('Entered Word');\n\n            state.position.y += state.flipped ? -1 : 1;\n            state.position.x = 0;\n\n            if (isFinished(state.words)) {\n                goal('Game Finished');\n\n                if (state.timer) {\n                    clearInterval(state.timer);\n                }\n\n                const game = loadGame();\n\n                state.streak++;\n                state.finished = true;\n\n                game.finished = true;\n                game.words = state.words;\n                saveGame(game);\n\n                showSuccess(state);\n            }\n        }\n    }\n}\n\nfunction handleDeleteWord(state) {\n    state.words[state.position.y] = '     '.split('');\n    state.position.y -= state.flipped ? -1 : 1;\n    state.words[state.position.y] = '     '.split('');\n}\n\nconst emptyWord = (word) => word.join('') === '     ';\n\nfunction handleFlip(state) {\n    state.flipped = !state.flipped;\n    state.words[state.position.y] = '     '.split('');\n    state.position.x = 0;\n    state.position.y = state.flipped ? state.words.findLastIndex(emptyWord) : state.words.findIndex(emptyWord);\n}\n\nfunction clearPopup() {\n    const app = document.getElementById('app');\n    const popup = app.querySelector('popup-message');\n\n    if (popup) {\n        app.removeChild(popup);\n\n        return true;\n    }\n\n    return false;\n}\n\nfunction setupKeyboardHandler(state) {\n    const keyboard = document.querySelector('virtual-keyboard');\n\n    keyboard.addEventListener('keypress', (event) => {\n        const key = event.detail.key;\n\n        if (state.position.y < 5) {\n            if (key === '⌫') {\n                handleBackspace(state);\n            } else if (key === '⏎') {\n                handleEnter(state);\n            } else if (key.length === 1) {\n                handleLetterInput(state, key);\n            } else if (key.startsWith('Flip')) {\n                handleFlip(state);\n            }\n\n            renderBoard(state);\n        }\n    });\n\n    document.addEventListener('keydown', (e) => {\n        if (!state.finished) {\n            if (clearPopup()) return;\n\n            switch (e.key) {\n                case 'Backspace':\n                    handleBackspace(state);\n                    break;\n                case 'Enter':\n                    handleEnter(state);\n                    break;\n                default:\n                    if (isLetter(e.key)) {\n                        const letter = e.key.toLowerCase();\n\n                        if (state.words[0].includes(letter) || state.words[5].includes(letter)) {\n                            handleLetterInput(state, letter);\n                        }\n                    } else {\n                        console.log(e.key);\n                    }\n            }\n\n            renderBoard(state);\n        }\n    });\n}\n\nfunction setupBoardHandler(state) {\n    const div = document.querySelector('game-board');\n\n    div.addEventListener('letterPress', (event) => {\n        if (!state.started || state.finshed) return;\n\n        const letter = event.detail.letter;\n\n        handleLetterInput(state, letter);\n\n        renderBoard(state);\n    });\n\n    div.addEventListener('enterPress', () => {\n        handleEnter(state);\n        renderBoard(state);\n    });\n\n    div.addEventListener('backspacePress', () => {\n        handleBackspace(state);\n        renderBoard(state);\n    });\n\n    div.addEventListener('trashPress', () => {\n        handleDeleteWord(state);\n        renderBoard(state);\n    });\n}\n\nfunction showError(message) {\n    const app = document.getElementById('app');\n    const error = new PopupMessage('error');\n\n    const content = document.createElement('div');\n    content.setAttribute('slot', 'content');\n    content.innerHTML = `${message}<br/><br/><div class=\"buttons\"><button>OK</button>`;\n\n    error.append(content);\n    app.append(error);\n\n    error.addEventListener('buttonClick', (e) => {\n        app.removeChild(error);\n    });\n}\n\nfunction showHelp() {\n    const app = document.getElementById('app');\n    const popup = new PopupHelp();\n\n    popup.addEventListener('buttonClick', (event) => {\n        app.removeChild(popup);\n    });\n\n    app.appendChild(popup);\n}\n\nfunction showStats() {\n    const app = document.getElementById('app');\n    const popup = new PopupStats(getHistory());\n\n    popup.addEventListener('buttonClick', (event) => {\n        app.removeChild(popup);\n    });\n\n    app.appendChild(popup);\n}\n\nfunction showPopup(state) {\n    return new Promise((resolve) => {\n        const app = document.getElementById('app');\n        const popup = new PopupMessage();\n\n        const div = document.createElement('div');\n        div.setAttribute('slot', 'content');\n        let message = '';\n\n        if (state.newUser) {\n            message = `\n                <p>Welcome to ANAGRAMISH.</p><p>Find the four words that connect the first word to the last.</p><p>Each word in between must use four letters from the word above it and 1 letter from the bottom word.</p>\n            `;\n        } else {\n            message = `\n                <p>Welcome back.</p>\n                ${state.streak > 0 ?\n                    `<p>Your streak is currently ${state.streak}.</p>` :\n                    '<p>Starting a new streak today - come back daily to keep it going.'\n                }\n            `;\n        }\n\n        div.innerHTML = `\n            ${message}\n            <p>Good luck!</p>\n            <div class=\"buttons\">\n                <button>Help</button>\n                <button>Start</button>\n            </div>\n        `;\n\n        popup.append(div);\n\n        popup.addEventListener('buttonClick', (event) => {\n            const { name } = event.detail;\n\n            if (name === 'Start') {\n                app.removeChild(popup);\n                state.started = true;\n                resolve();\n            } else {\n                showHelp();\n            }\n        });\n\n        app.appendChild(popup);\n    });\n}\n\nfunction renderStars(seconds) {\n    const div = document.getElementById('stars');\n    const stars = new GameStars(seconds);\n\n    div.innerHTML = '';\n    div.append(stars);\n}\n\nfunction startClock(state) {\n    const fn = () => {\n        const game = loadGame();\n        game.numSeconds += 1;\n        saveGame(game);\n\n        renderStars(game.numSeconds);\n    };\n\n    fn();\n\n    state.timer = setInterval(fn, 1000);\n}\n\nfunction render(state) {\n    renderBoard(state);\n    renderKeyboard(state);\n}\n\nfunction fixHistoryDates() {\n    const history = getHistory();\n\n    const keys = Object.keys(history);\n\n    console.log(keys);\n\n    keys.forEach((key) => {\n        const match = key.match(/(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/);\n\n        if (match) {\n            const newKey = `${match[3]}-${match[1].padStart(2, '0')}-${match[2].padStart(2, '0')}`;\n\n            history[newKey] = history[key];\n\n            delete history[key];\n        }\n    });\n\n    putHistory(history)\n}\n\nasync function main() {\n    fixHistoryDates();\n\n    const pairs = await loadFile(pairsFile);\n    const dict = await loadFile(dictFile);\n    const state = init(parse(pairs), dict);\n\n    const themeManager = new ThemeManager();\n    window.themeManager = themeManager;\n\n    render(state);\n\n    const help = document.getElementById('help');\n    help.addEventListener('click', (e) => {\n        e.preventDefault();\n        showHelp();\n    });\n\n    const stats = document.getElementById('stats');\n    stats.addEventListener('click', (e) => {\n        e.preventDefault();\n        showStats();\n    });\n\n    if (state.finished) {\n        showSuccess(state);\n    } else {\n        showPopup(state).then(() => {\n            setupKeyboardHandler(state);\n            startClock(state);\n        });\n    }\n}\n\nmain();\n"]}